{"version":3,"sources":["components/Header.jsx","components/FormModal.jsx","components/TodoList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Header","props","state","isModalVisible","handleForm","reference","React","createRef","showModal","setState","handleCancel","onFinish","values","current","resetFields","this","style","display","justifyContent","type","onClick","title","visible","onCancel","footer","name","layout","ref","Item","label","rules","required","message","htmlType","block","Component","FormModal","handelUpdate","item","componentDidUpdate","id","setFieldsValue","hidden","TodoList","handleDeleteSetstate","handleDelete","index","handleComplete","newItem","isChecked","handleEdit","todos","header","dataSource","renderItem","item1","Meta","description","CheckCircleFilled","fontSize","color","EditFilled","margin","DeleteFilled","App","Math","floor","random","lastResult","map","obj","splice","console","log","length","align","paddingTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5aad98f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Modal, Button, Form, Input,\r\n} from 'antd';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalVisible: false,\r\n    };\r\n    const { handleForm } = this.props;\r\n    this.reference = React.createRef();\r\n    this.showModal = () => {\r\n      this.setState({ isModalVisible: true });\r\n    };\r\n\r\n    this.handleCancel = () => {\r\n      this.setState({ isModalVisible: false });\r\n    };\r\n\r\n    this.onFinish = (values) => {\r\n      handleForm(values);\r\n      this.reference.current.resetFields();\r\n      this.setState({ isModalVisible: false });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { isModalVisible } = this.state;\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <h1>ToDo</h1>\r\n        <Button type=\"primary\" onClick={this.showModal}>\r\n          New\r\n        </Button>\r\n\r\n        <Modal\r\n          title=\"Add New Todo\"\r\n          visible={isModalVisible}\r\n          onCancel={this.handleCancel}\r\n          footer={null}\r\n        >\r\n          <Form\r\n            name=\"todo-form\"\r\n            layout=\"vertical\"\r\n            onFinish={this.onFinish}\r\n            ref={this.reference}\r\n          >\r\n            <Form.Item\r\n              label=\"Title\"\r\n              name=\"title\"\r\n              rules={[{ required: true, message: 'Please Enter Title!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Description\" name=\"description\">\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                Add Todo\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Modal, Form, Input, Button,\r\n} from 'antd';\r\n\r\nclass FormModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      handelUpdate, handleCancel, isModalVisible, item,\r\n    } = this.props;\r\n    this.onFinish = (values) => {\r\n      handelUpdate(values);\r\n      handleCancel();\r\n    };\r\n    this.ref = React.createRef();\r\n\r\n    this.componentDidUpdate = () => {\r\n      if (isModalVisible && item && item.id) {\r\n        this.ref.current.setFieldsValue({\r\n          ...item,\r\n        });\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { isModalVisible, handleCancel } = this.props;\r\n    return (\r\n      <>\r\n        <Modal\r\n          title=\"Edit Todo\"\r\n          visible={isModalVisible}\r\n          onCancel={handleCancel}\r\n          footer={null}\r\n        >\r\n          <Form\r\n            name=\"form-modal\"\r\n            layout=\"vertical\"\r\n            ref={this.ref}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item\r\n              label=\"Title\"\r\n              name=\"title\"\r\n              rules={[{ required: true, message: 'Please input title!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Description\" name=\"description\">\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item hidden name=\"id\">\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                Update\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormModal;\r\n","import React, { Component } from 'react';\r\nimport { List } from 'antd';\r\nimport { DeleteFilled, CheckCircleFilled, EditFilled } from '@ant-design/icons';\r\n\r\nimport FormModal from './FormModal';\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: {},\r\n      isModalVisible: false,\r\n    };\r\n\r\n    const { handleDeleteSetstate, handelUpdate } = this.props;\r\n\r\n    this.handleDelete = (index) => {\r\n      handleDeleteSetstate(index);\r\n    };\r\n\r\n    this.handleComplete = (item) => {\r\n      const newItem = {\r\n        ...item,\r\n        isChecked: !item.isChecked,\r\n      };\r\n      handelUpdate(newItem);\r\n      this.setState({\r\n        item: newItem,\r\n      });\r\n    };\r\n\r\n    this.handleEdit = (item) => {\r\n      this.setState({ isModalVisible: true, item: { ...item } });\r\n    };\r\n\r\n    this.handleCancel = () => {\r\n      this.setState({ isModalVisible: false, item: {} });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { todos, handelUpdate } = this.props;\r\n    const { isModalVisible, item } = this.state;\r\n    return (\r\n      <List\r\n        header=\"ToDo List\"\r\n        dataSource={todos}\r\n        renderItem={(item1, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              title={item1.title}\r\n              description={item1.description}\r\n            />\r\n            <CheckCircleFilled\r\n              style={\r\n                  item1.isChecked\r\n                    ? { fontSize: '125%', color: 'green' }\r\n                    : { fontSize: '125%', color: 'gray' }\r\n                }\r\n              onClick={() => {\r\n                this.handleComplete(item1);\r\n              }}\r\n            />\r\n\r\n            <EditFilled\r\n              style={{\r\n                fontSize: '125%',\r\n                margin: '0 17px',\r\n                color: '#096dd9',\r\n              }}\r\n              onClick={() => {\r\n                this.handleEdit(item1);\r\n              }}\r\n            />\r\n\r\n            <FormModal\r\n              isModalVisible={isModalVisible}\r\n              handleCancel={this.handleCancel}\r\n              item={item}\r\n              handelUpdate={handelUpdate}\r\n            />\r\n\r\n            <DeleteFilled\r\n              style={{ fontSize: '125%', color: 'red' }}\r\n              onClick={() => this.handleDelete(index)}\r\n            />\r\n          </List.Item>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport Header from './components/Header';\r\nimport TodoList from './components/TodoList';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [],\r\n    };\r\n    const { todos } = this.state;\r\n    this.handleForm = (values) => {\r\n      this.setState({\r\n        todos: [\r\n          {\r\n            id: Math.floor(Math.random() * (1000 - 1 + 1)) + 1,\r\n            isChecked: false,\r\n            ...values,\r\n          },\r\n          ...todos,\r\n        ],\r\n      });\r\n    };\r\n    this.handelUpdate = (item) => {\r\n      const lastResult = [...todos].map((obj) => {\r\n        if (obj.id === item.id) {\r\n          return item;\r\n        }\r\n        return obj;\r\n      });\r\n      this.setState({ todos: lastResult });\r\n    };\r\n\r\n    this.handleDeleteSetstate = (index) => {\r\n      this.setState({ todos: todos.splice(index, 1) });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { todos } = this.state;\r\n    console.log(todos);\r\n    return (\r\n      <div style={{ margin: '5px 100px 0' }}>\r\n        <Header handleForm={this.handleForm} />\r\n\r\n        {todos.length === 0 ? (\r\n          <h1 align=\"center\" style={{ paddingTop: '250px' }}>\r\n            There is no task to do :(\r\n          </h1>\r\n        ) : (\r\n          <TodoList\r\n            todos={todos}\r\n            handelUpdate={this.handelUpdate}\r\n            handleDeleteSetstate={this.handleDeleteSetstate}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  // eslint-disable-next-line react/jsx-filename-extension\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}