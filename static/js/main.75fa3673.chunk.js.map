{"version":3,"sources":["constatnts/todoConstatnts.js","actions/getTodos.js","components/Header.jsx","components/FormModal.jsx","components/TodoList.jsx","App.jsx","reportWebVitals.js","store.js","reducers/ListTodosReducer.js","index.js"],"names":["TODO_LIST","triggerReducer","type","extra","handleUpdate","item","dispatch","getState","Todos","lastResult","map","obj","id","console","log","data","Header","props","state","isModalVisible","reference","React","createRef","showModal","setState","handleCancel","onFinish","values","newData","Math","floor","random","isChecked","addTodo","current","resetFields","this","style","display","justifyContent","onClick","title","visible","onCancel","footer","name","layout","ref","Item","label","rules","required","message","htmlType","block","Component","mapDispatchToProsp","result","connect","todos","FormModal","componentDidUpdate","setFieldsValue","hidden","TodoList","handleComplete","newItem","handleEdit","deleteTodo","header","dataSource","renderItem","item1","index","Meta","description","CheckCircleFilled","fontSize","color","EditFilled","margin","onConfirm","okText","cancelText","placement","DeleteFilled","splice","App","length","align","paddingTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","middilware","thunk","Reducers","combineReducers","action","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","Store","createStore","composeWithDevTools","applyMiddleware","subscribe","stringify","setItem","saveState","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.75fa3673.chunk.js","sourcesContent":["export const TODO_LIST = 'TODO_LIST';\r\n\r\nexport const triggerReducer = (type, extra = {}) => ({\r\n  type,\r\n  ...extra,\r\n});\r\n","import { TODO_LIST, triggerReducer } from '../constatnts/todoConstatnts';\r\n\r\nexport const listTodos = (data) => (dispatch) => {\r\n  dispatch(triggerReducer(TODO_LIST, { data }));\r\n};\r\n\r\nexport const addTodo = (data) => (dispatch, getState) => {\r\n  const { Todos } = getState();\r\n  const result = [data, ...Todos];\r\n  dispatch(triggerReducer(TODO_LIST, { data: result }));\r\n};\r\n\r\nexport const deleteTodo = (index) => (dispatch, getState) => {\r\n  const { Todos } = getState();\r\n  Todos.splice(index, 1);\r\n  console.log('should be one item deletes-->', Todos);\r\n  dispatch(triggerReducer(TODO_LIST, { data: Todos }));\r\n};\r\n\r\nexport const handleUpdate = (item) => (dispatch, getState) => {\r\n  const { Todos } = getState();\r\n  const lastResult = [...Todos].map((obj) => {\r\n    if (obj.id === item.id) {\r\n      return item;\r\n    }\r\n    return obj;\r\n  });\r\n  console.log('should be updated -->', Todos);\r\n  dispatch(triggerReducer(TODO_LIST, { data: lastResult }));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Modal, Button, Form, Input } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../actions/getTodos';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalVisible: false,\r\n    };\r\n    this.reference = React.createRef();\r\n    this.showModal = () => {\r\n      this.setState({ isModalVisible: true });\r\n    };\r\n\r\n    this.handleCancel = () => {\r\n      this.setState({ isModalVisible: false });\r\n    };\r\n\r\n    this.onFinish = (values) => {\r\n      const newData = {\r\n        id: Math.floor(Math.random() * (1000 - 1 + 1)) + 1,\r\n        isChecked: false,\r\n        ...values,\r\n      };\r\n\r\n      this.props.addTodo(newData);\r\n      this.reference.current.resetFields();\r\n      this.setState({ isModalVisible: false });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { isModalVisible } = this.state;\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <h1>ToDo</h1>\r\n        <Button type=\"primary\" onClick={this.showModal}>\r\n          New\r\n        </Button>\r\n\r\n        <Modal\r\n          title=\"Add New Todo\"\r\n          visible={isModalVisible}\r\n          onCancel={this.handleCancel}\r\n          footer={null}\r\n        >\r\n          <Form\r\n            name=\"todo-form\"\r\n            layout=\"vertical\"\r\n            onFinish={this.onFinish}\r\n            ref={this.reference}\r\n          >\r\n            <Form.Item\r\n              label=\"Title\"\r\n              name=\"title\"\r\n              rules={[{ required: true, message: 'Please Enter Title!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Description\" name=\"description\">\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                Add Todo\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//do i need below function?\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.Todos,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProsp = {\r\n  addTodo,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProsp)(Header);\r\n","import React, { Component } from 'react';\r\nimport { Modal, Form, Input, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodo, handleUpdate } from '../actions/getTodos';\r\n\r\nclass FormModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFinish = (values) => {\r\n      const { handleUpdate, handleCancel } = this.props;\r\n      handleUpdate(values);\r\n      handleCancel();\r\n    };\r\n    this.ref = React.createRef();\r\n\r\n    this.componentDidUpdate = () => {\r\n      const { isModalVisible, item } = this.props;\r\n      if (isModalVisible && item && item.id) {\r\n        this.ref.current.setFieldsValue({\r\n          ...item,\r\n        });\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { isModalVisible, handleCancel } = this.props;\r\n    return (\r\n      <>\r\n        <Modal\r\n          title=\"Edit Todo\"\r\n          visible={isModalVisible}\r\n          onCancel={handleCancel}\r\n          footer={null}\r\n        >\r\n          <Form\r\n            name=\"form-modal\"\r\n            layout=\"vertical\"\r\n            ref={this.ref}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item\r\n              label=\"Title\"\r\n              name=\"title\"\r\n              rules={[{ required: true, message: 'Please input title!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Description\" name=\"description\">\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item hidden name=\"id\">\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                Update\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.Todos,\r\n  };\r\n};\r\nconst mapDispatchToProsp = {\r\n  handleUpdate,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProsp)(FormModal);\r\n","import React, { Component } from 'react';\r\nimport { List, Popconfirm } from 'antd';\r\nimport { DeleteFilled, CheckCircleFilled, EditFilled } from '@ant-design/icons';\r\nimport FormModal from './FormModal';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodo, handleUpdate } from '../actions/getTodos';\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: {},\r\n      isModalVisible: false,\r\n    };\r\n\r\n    this.handleComplete = (item) => {\r\n      const { handleUpdate } = this.props;\r\n      const newItem = {\r\n        ...item,\r\n        isChecked: !item.isChecked,\r\n      };\r\n      handleUpdate(newItem);\r\n      this.setState({\r\n        item: newItem,\r\n      });\r\n    };\r\n\r\n    this.handleEdit = (item) => {\r\n      this.setState({ isModalVisible: true, item: { ...item } });\r\n    };\r\n\r\n    this.handleCancel = () => {\r\n      this.setState({ isModalVisible: false, item: {} });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { todos, deleteTodo } = this.props;\r\n    const { isModalVisible, item } = this.state;\r\n    console.log('todo list --> ', todos);\r\n    return (\r\n      <List\r\n        header=\"ToDo List\"\r\n        dataSource={todos}\r\n        renderItem={(item1, index) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              title={item1.title}\r\n              description={item1.description}\r\n            />\r\n            <CheckCircleFilled\r\n              style={\r\n                item1.isChecked\r\n                  ? { fontSize: '125%', color: 'green' }\r\n                  : { fontSize: '125%', color: 'gray' }\r\n              }\r\n              onClick={() => {\r\n                this.handleComplete(item1);\r\n              }}\r\n            />\r\n\r\n            <EditFilled\r\n              style={{\r\n                fontSize: '125%',\r\n                margin: '0 17px',\r\n                color: '#096dd9',\r\n              }}\r\n              onClick={() => {\r\n                this.handleEdit(item1);\r\n              }}\r\n            />\r\n\r\n            <FormModal\r\n              isModalVisible={isModalVisible}\r\n              handleCancel={this.handleCancel}\r\n              item={item}\r\n            />\r\n            <Popconfirm\r\n              title={`Are you sure delete ${item1.title} task ?`}\r\n              //delete function is not real time\r\n              onConfirm={() => {\r\n                deleteTodo(index);\r\n                console.log('deleted');\r\n              }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n              placement=\"bottom\"\r\n            >\r\n              <DeleteFilled style={{ fontSize: '125%', color: 'red' }} />\r\n            </Popconfirm>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.Todos,\r\n  };\r\n};\r\nconst mapDispatchToProsp = {\r\n  deleteTodo,\r\n  handleUpdate,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProsp)(TodoList);\r\n","import React, { Component } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { connect } from 'react-redux';\r\nimport Header from './components/Header';\r\nimport TodoList from './components/TodoList';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { todos } = this.props;\r\n    return (\r\n      <div style={{ margin: '5px 100px 0' }}>\r\n        <Header />\r\n\r\n        {todos.length === 0 ? (\r\n          <h1 align=\"center\" style={{ paddingTop: '250px' }}>\r\n            There is no task to do :(\r\n          </h1>\r\n        ) : (\r\n          <TodoList />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.Todos,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { ListTodosReducer } from './reducers/ListTodosReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middilware = [thunk];\r\nconst intialState = {};\r\n\r\nconst Reducers = combineReducers({\r\n  Todos: ListTodosReducer,\r\n});\r\n\r\nconst loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('todos');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('todos', serializedState);\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n\r\nconst persistedState = loadState();\r\n\r\nconst Store = createStore(\r\n  Reducers,\r\n  persistedState,\r\n  composeWithDevTools(applyMiddleware(...middilware))\r\n);\r\n\r\nStore.subscribe(() => {\r\n  saveState({\r\n    Todos: Store.getState().Todos,\r\n  });\r\n});\r\n\r\nexport default Store;\r\n","import { TODO_LIST } from '../constatnts/todoConstatnts';\r\n\r\nexport const ListTodosReducer = (state = [], action) => {\r\n  const { type, data } = action;\r\n\r\n  switch (type) {\r\n    case TODO_LIST: {\r\n      return data;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={Store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}